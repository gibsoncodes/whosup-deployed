{"version":3,"sources":["Restaurant.js","App.js","reportWebVitals.js","index.js"],"names":["Restaurant","place","hours","Date","getDay","opening_hours","weekday_text","address","formatted_address","split","className","name","formatted_phone_number","App","useState","radius","location","zip","formState","setFormState","gotLocation","setGotLocation","loader","setLoader","data","setData","src","alt","style","borderColor","onClick","navigator","geolocation","getCurrentPosition","position","newState","latitude","coords","longitude","alert","id","onChange","event","target","value","placeholder","maxLength","htmlFor","val","timer","ms","Promise","res","setTimeout","a","prevState","load","then","payload","axios","post","preVstate","map","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a547636.chunk.js","sourcesContent":["import React from 'react'\n\nconst Restaurant = ({place}) => {\n    let hours = new Date().getDay() - 1;\n    hours = place.opening_hours.weekday_text[hours]\n    let address = place.formatted_address.split(',')\n    address = address[0]\n    return (\n        <div className=\"place\">\n            <h2 className=\"name\">{place.name}</h2>\n            <h4 className=\"hours\">{hours}</h4>\n            <p className=\"telephone\">{place.formatted_phone_number}</p>\n            <p className=\"address\">{address}</p>\n        </div>\n    )\n}\n\nexport default Restaurant\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport Restaurant from \"./Restaurant\";\n\nfunction App() {\n  const [formState, setFormState] = useState({\n    radius: \"1600\",\n    location: null,\n    zip: \"\",\n  });\n  const [gotLocation, setGotLocation] = useState(\"none\");\n  const [loader, setLoader] = useState(false)\n  const [data, setData] = useState(null);\n\n  function submitForm() {\n      const timer = ms => new Promise(res => setTimeout(res, ms))\n\n      async function load () {\n        setLoader(prevState => true);\n        while (gotLocation === \"pending\") {\n            if (formState.location) {\n                setGotLocation(\"active\")\n            }\n            await timer(1000)\n         }\n      }\n\n      load()\n      .then(() => {\n        let payload = formState;\n        axios.post(\"https://whosup-backend.herokuapp.com/\", payload).then((res) => {\n          setLoader(preVstate => false)\n          setData(res.data);\n        });\n      })\n\n  }\n\n  function handleChange(event) {\n    let val = event.target.value + 1600 * (event.target.value + 1);\n    val = \"\" + val;\n    setFormState({ ...formState, [event.target.id]: val });\n  }\n  function handleZip(event) {\n    setFormState({ ...formState, [event.target.id]: event.target.value });\n  }\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(saveCoords);\n      setGotLocation(\"pending\");\n    } else {\n      alert(\"location services not supported please manually fill out field.\");\n    }\n    function saveCoords(position) {\n      const newState = formState;\n      newState.location = {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n      };\n      setFormState(newState);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <img className=\"logo\" src=\"images/whosup.jpg\" alt=\"logo\"></img>\n      </div>\n      <div className=\"form\">\n        <div className=\"upper \">\n          <div className=\"get-location\">\n            <div className=\"inner-loc\">\n              <div\n                className=\"button_slide slide_down small-btn\"\n                style={{borderColor: gotLocation !== \"none\" ? \"#659157\" : \"#ef4136\"}}\n                onClick={getLocation}\n              >\n                Get Location\n              </div>\n              <h2 className=\"or\">OR</h2>\n              <input\n                id=\"zip\"\n                onChange={handleZip}\n                placeholder=\"Zip Code\"\n                maxLength=\"5\"\n                value={formState.zip}\n              />\n            </div>\n          </div>\n          <div className=\"get-radius\">\n            <label htmlFor=\"radius\">Search Within</label>\n            <select id=\"radius\" onChange={handleChange}>\n              <option value=\"0\">1 mile</option>\n              <option value=\"1\">2 miles</option>\n              <option value=\"2\">3 miles</option>\n              <option value=\"3\">4 miles</option>\n            </select>\n          </div>\n        </div>\n        <div onClick={submitForm} className=\"button_slide slide_down\">\n          Who's Up!\n        </div>\n      </div>\n      <div className=\"content\">\n        {loader ? <div className=\"loadingDiv\"><div className=\"loadingAnim\"></div></div> : null}\n        {data\n          ? data.map((item) => <Restaurant key={item.name} place={item} />)\n          : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}